def returnlevels(levelsset):
  import numpy as np
  if levelsset=='L38':
     z_top_of_model= 39254.833576
     first_constant_r_rho_level=30
     eta_theta=np.array((0.0, .0005095, .0020380, .0045854, .0081519, .0127373, .0183417, .0249651, .0326074, .0412688, .0509491, .0616485, .0733668, .0861040, .0998603, .1146356, .1304298, .1472430, .1650752, .1839264, .2037966, .2246857, .2465938, .2695209, .2934670, .3184321, .3444162, .3714396, .3998142, .4298913, .4620737, .4968308, .5347160, .5763897, .6230643, .6772068, .7443435, .8383348, 1.0000000))
  elif levelsset=='L85':
     z_top_of_model = 85000.00
     first_constant_r_rho_level= 51
     eta_theta=np.array((0.0, 0.2352941E-03, 0.6274510E-03, 0.1176471E-02, 0.1882353E-02,  0.2745098E-02, 0.3764706E-02, 0.4941176E-02, 0.6274510E-02, 0.7764705E-02,  0.9411764E-02, 0.1121569E-01, 0.1317647E-01, 0.1529412E-01, 0.1756863E-01,  0.2000000E-01, 0.2258823E-01, 0.2533333E-01, 0.2823529E-01, 0.3129411E-01,  0.3450980E-01, 0.3788235E-01, 0.4141176E-01, 0.4509804E-01, 0.4894118E-01,  0.5294117E-01, 0.5709804E-01, 0.6141176E-01, 0.6588235E-01, 0.7050980E-01,  0.7529411E-01, 0.8023529E-01, 0.8533333E-01, 0.9058823E-01, 0.9600001E-01,  0.1015687E+00, 0.1072942E+00, 0.1131767E+00, 0.1192161E+00, 0.1254127E+00,  0.1317666E+00, 0.1382781E+00, 0.1449476E+00, 0.1517757E+00, 0.1587633E+00,  0.1659115E+00, 0.1732221E+00, 0.1806969E+00, 0.1883390E+00, 0.1961518E+00,  0.2041400E+00, 0.2123093E+00, 0.2206671E+00, 0.2292222E+00, 0.2379856E+00,  0.2469709E+00, 0.2561942E+00, 0.2656752E+00, 0.2754372E+00, 0.2855080E+00,  0.2959203E+00, 0.3067128E+00, 0.3179307E+00, 0.3296266E+00, 0.3418615E+00,  0.3547061E+00, 0.3682416E+00, 0.3825613E+00, 0.3977717E+00, 0.4139944E+00,  0.4313675E+00, 0.4500474E+00, 0.4702109E+00, 0.4920571E+00, 0.5158098E+00,  0.5417201E+00, 0.5700686E+00, 0.6011688E+00, 0.6353697E+00, 0.6730590E+00,  0.7146671E+00, 0.7606701E+00, 0.8115944E+00, 0.8680208E+00, 0.9305884E+00,  0.1000000E+01))
  elif levelsset=='L242':
     z_top_of_model = 85000.00
     first_constant_r_rho_level = 143
     eta_theta = np.array((0.0, 1.1764706E-04, 2.5490196E-04, 4.1176471E-04, 5.8823529E-04, 7.8431373E-04, 1.0000000E-03, 1.2352941E-03, 1.4901961E-03, 1.7647059E-03, 2.0588235E-03, 2.3725490E-03, 2.7058824E-03, 3.0588235E-03, 3.4313725E-03, 3.8235294E-03, 4.2352941E-03, 4.6666667E-03, 5.1176471E-03, 5.5882353E-03, 6.0784314E-03, 6.5882353E-03, 7.1176471E-03, 7.6666667E-03, 8.2352941E-03, 8.8235294E-03, 9.4313725E-03, 1.0058824E-02, 1.0705882E-02, 1.1372549E-02, 1.2058824E-02, 1.2764706E-02, 1.3490196E-02, 1.4235294E-02, 1.5000000E-02, 1.5784314E-02, 1.6588235E-02, 1.7411765E-02, 1.8254902E-02, 1.9117647E-02, 2.0000000E-02, 2.0901961E-02, 2.1823529E-02, 2.2764706E-02, 2.3725490E-02, 2.4705882E-02, 2.5705882E-02, 2.6725490E-02, 2.7764706E-02, 2.8823529E-02, 2.9901961E-02, 3.1000000E-02, 3.2117647E-02, 3.3254902E-02, 3.4411765E-02, 3.5588235E-02, 3.6784314E-02, 3.8000000E-02, 3.9235294E-02, 4.0490196E-02, 4.1764706E-02, 4.3058824E-02, 4.4372549E-02, 4.5705882E-02, 4.7058824E-02, 4.8431373E-02, 4.9823529E-02, 5.1235294E-02, 5.2666667E-02, 5.4117647E-02, 5.5588235E-02, 5.7078431E-02, 5.8588235E-02, 6.0117647E-02, 6.1666667E-02, 6.3235294E-02, 6.4823529E-02, 6.6431373E-02, 6.8058824E-02, 6.9705882E-02, 7.1372549E-02, 7.3058821E-02, 7.4764696E-02, 7.6490168E-02, 7.8235224E-02, 7.9999850E-02, 8.1784024E-02, 8.3587718E-02, 8.5410896E-02, 8.7253516E-02, 8.9115526E-02, 9.0996865E-02, 9.2897463E-02, 9.4817239E-02, 9.6756104E-02, 9.8713957E-02, 1.0069069E-01, 1.0268617E-01, 1.0470027E-01, 1.0673284E-01, 1.0878373E-01, 1.1085278E-01, 1.1293979E-01, 1.1504459E-01, 1.1716697E-01, 1.1930672E-01, 1.2146363E-01, 1.2363745E-01, 1.2582796E-01, 1.2803490E-01, 1.3025802E-01, 1.3249705E-01, 1.3475172E-01, 1.3702177E-01, 1.3930689E-01, 1.4160681E-01, 1.4392125E-01, 1.4624989E-01, 1.4859246E-01, 1.5094865E-01, 1.5331818E-01, 1.5570074E-01, 1.5809606E-01, 1.6050385E-01, 1.6292382E-01, 1.6535571E-01, 1.6779925E-01, 1.7025420E-01, 1.7272030E-01, 1.7519734E-01, 1.7768511E-01, 1.8018340E-01, 1.8269205E-01, 1.8521089E-01, 1.8773980E-01, 1.9027867E-01, 1.9282742E-01, 1.9538600E-01, 1.9795438E-01, 2.0053259E-01, 2.0312066E-01, 2.0571868E-01, 2.0832680E-01, 2.1094516E-01, 2.1357399E-01, 2.1621355E-01, 2.1886416E-01, 2.2152619E-01, 2.2420005E-01, 2.2688624E-01, 2.2958528E-01, 2.3229781E-01, 2.3502448E-01, 2.3776606E-01, 2.4052336E-01, 2.4329728E-01, 2.4608880E-01, 2.4889898E-01, 2.5172898E-01, 2.5458003E-01, 2.5745346E-01, 2.6035072E-01, 2.6327333E-01, 2.6622292E-01, 2.6920124E-01, 2.7221016E-01, 2.7525163E-01, 2.7832776E-01, 2.8144075E-01, 2.8459296E-01, 2.8778685E-01, 2.9102504E-01, 2.9431027E-01, 2.9764545E-01, 3.0103360E-01, 3.0447793E-01, 3.0798178E-01, 3.1154867E-01, 3.1518228E-01, 3.1888646E-01, 3.2266522E-01, 3.2652278E-01, 3.3046352E-01, 3.3449202E-01, 3.3861304E-01, 3.4283157E-01, 3.4715276E-01, 3.5158202E-01, 3.5612492E-01, 3.6078729E-01, 3.6557516E-01, 3.7049481E-01, 3.7555274E-01, 3.8075570E-01, 3.8611066E-01, 3.9162489E-01, 3.9730586E-01, 4.0316135E-01, 4.0919937E-01, 4.1542824E-01, 4.2185652E-01, 4.2849309E-01, 4.3534710E-01, 4.4242801E-01, 4.4974557E-01, 4.5730984E-01, 4.6513121E-01, 4.7322038E-01, 4.8158838E-01, 4.9024657E-01, 4.9920665E-01, 5.0848067E-01, 5.1808103E-01, 5.2802051E-01, 5.3831221E-01, 5.4896966E-01, 5.6000671E-01, 5.7143765E-01, 5.8327713E-01, 5.9554021E-01, 6.0824235E-01, 6.2139944E-01, 6.3502777E-01, 6.4914407E-01, 6.6376550E-01, 6.7890968E-01, 6.9459464E-01, 7.1083892E-01, 7.2766147E-01, 7.4508174E-01, 7.6311967E-01, 7.8173657E-01, 8.0066766E-01, 8.1987988E-01, 8.3934016E-01, 8.5901542E-01, 8.7887258E-01, 8.9887858E-01, 9.1900033E-01, 9.3920477E-01, 9.5945882E-01, 9.7972941E-01, 1.0000000E+00))
  elif levelsset=='L346':
     z_top_of_model = 85000.00
     first_constant_r_rho_level = 312
     eta_theta = np.array((0.0, 1.1749156E-04, 2.3498312E-04, 3.5247468E-04, 4.6996625E-04, 5.8745781E-04, 7.0494937E-04, 8.2244093E-04, 9.3993249E-04, 1.0574241E-03, 1.1749156E-03, 1.2924072E-03, 1.4098987E-03, 1.5273903E-03, 1.6448819E-03, 1.7623734E-03, 1.8798650E-03, 1.9973565E-03, 2.1148481E-03, 2.2323397E-03, 2.3498312E-03, 2.4673228E-03, 2.5848143E-03, 2.7023059E-03, 2.8197975E-03, 2.9372890E-03, 3.0547806E-03, 3.1722722E-03, 3.2897637E-03, 3.4072553E-03, 3.5247468E-03, 3.6422384E-03, 3.7597300E-03, 3.8772215E-03, 3.9947131E-03, 4.1122046E-03, 4.2296962E-03, 4.3471878E-03, 4.4646793E-03, 4.5821709E-03, 4.6996625E-03, 4.8171540E-03, 4.9346456E-03, 5.0521371E-03, 5.1696287E-03, 5.2871203E-03, 5.4046118E-03, 5.5221034E-03, 5.6395949E-03, 5.7570865E-03, 5.8745781E-03, 5.9920696E-03, 6.1095612E-03, 6.2270527E-03, 6.3445443E-03, 6.4620359E-03, 6.5795274E-03, 6.6970190E-03, 6.8145106E-03, 6.9320021E-03, 7.0494937E-03, 7.1669852E-03, 7.2844768E-03, 7.4019684E-03, 7.5194599E-03, 7.6369515E-03, 7.7544430E-03, 7.8719346E-03, 7.9894262E-03, 8.1069177E-03, 8.2244093E-03, 8.3419009E-03, 8.4593924E-03, 8.5768840E-03, 8.6943755E-03, 8.8118671E-03, 8.9293587E-03, 9.0468502E-03, 9.1643418E-03, 9.2818333E-03, 9.3993249E-03, 9.5168165E-03, 9.6343080E-03, 9.7517996E-03, 9.8692911E-03, 9.9867827E-03, 1.0104274E-02, 1.0221766E-02, 1.0339257E-02, 1.0456749E-02, 1.0574241E-02, 1.0691732E-02, 1.0809224E-02, 1.0926715E-02, 1.1044207E-02, 1.1161698E-02, 1.1279190E-02, 1.1396681E-02, 1.1514173E-02, 1.1631665E-02, 1.1749156E-02, 1.1866648E-02, 1.1984139E-02, 1.2101631E-02, 1.2219122E-02, 1.2336614E-02, 1.2454105E-02, 1.2571597E-02, 1.2689089E-02, 1.2806580E-02, 1.2924072E-02, 1.3041563E-02, 1.3159055E-02, 1.3276546E-02, 1.3394038E-02, 1.3511530E-02, 1.3629021E-02, 1.3746513E-02, 1.3864004E-02, 1.3981496E-02, 1.4098987E-02, 1.4216479E-02, 1.4333970E-02, 1.4451462E-02, 1.4568954E-02, 1.4686445E-02, 1.4803937E-02, 1.4921428E-02, 1.5038920E-02, 1.5156411E-02, 1.5273903E-02, 1.5391395E-02, 1.5508886E-02, 1.5626378E-02, 1.5743869E-02, 1.5861361E-02, 1.5978852E-02, 1.6096344E-02, 1.6213835E-02, 1.6331327E-02, 1.6448819E-02, 1.6566310E-02, 1.6683802E-02, 1.6801293E-02, 1.6918785E-02, 1.7036276E-02, 1.7153768E-02, 1.7271260E-02, 1.7388751E-02, 1.7506243E-02, 1.7623734E-02, 1.7741226E-02, 1.7858717E-02, 1.7976209E-02, 1.8093700E-02, 1.8211192E-02, 1.8328684E-02, 1.8446175E-02, 1.8563667E-02, 1.8681158E-02, 1.8798650E-02, 1.8916141E-02, 1.9033633E-02, 1.9151124E-02, 1.9268616E-02, 1.9386108E-02, 1.9503599E-02, 1.9621091E-02, 1.9738582E-02, 1.9856074E-02, 1.9973565E-02, 2.0091057E-02, 2.0208549E-02, 2.0326040E-02, 2.0443532E-02, 2.0561023E-02, 2.0678515E-02, 2.0796006E-02, 2.0913498E-02, 2.1030989E-02, 2.1148481E-02, 2.1265973E-02, 2.1383464E-02, 2.1500956E-02, 2.1618447E-02, 2.1735939E-02, 2.1853430E-02, 2.1970922E-02, 2.2088414E-02, 2.2205905E-02, 2.2323397E-02, 2.2440888E-02, 2.2558380E-02, 2.2675871E-02, 2.2793363E-02, 2.2910854E-02, 2.3028346E-02, 2.3145838E-02, 2.3263329E-02, 2.3380821E-02, 2.3498312E-02, 2.3615804E-02, 2.3733295E-02, 2.3850787E-02, 2.3968279E-02, 2.4085770E-02, 2.4203262E-02, 2.4320753E-02, 2.4438245E-02, 2.4555736E-02, 2.4673228E-02, 2.4790719E-02, 2.4908211E-02, 2.5025703E-02, 2.5143194E-02, 2.5260686E-02, 2.5378177E-02, 2.5495669E-02, 2.5613160E-02, 2.5730652E-02, 2.5848143E-02, 2.5965635E-02, 2.6083127E-02, 2.6200618E-02, 2.6318110E-02, 2.6435601E-02, 2.6553093E-02, 2.6670584E-02, 2.6788076E-02, 2.6905568E-02, 2.7023059E-02, 2.7140551E-02, 2.7258042E-02, 2.7375534E-02, 2.7493025E-02, 2.7610517E-02, 2.7728008E-02, 2.7845500E-02, 2.7962992E-02, 2.8080483E-02, 2.8197975E-02, 2.8315466E-02, 2.8432958E-02, 2.8550449E-02, 2.8667941E-02, 2.8785433E-02, 2.8902924E-02, 2.9020416E-02, 2.9137907E-02, 2.9255399E-02, 2.9372890E-02, 2.9490382E-02, 2.9607873E-02, 2.9725365E-02, 2.9842857E-02, 2.9960348E-02, 3.0077840E-02, 3.0195331E-02, 3.0312823E-02, 3.0430314E-02, 3.0547806E-02, 3.0665297E-02, 3.0782789E-02, 3.0900281E-02, 3.1017772E-02, 3.1135264E-02, 3.1252755E-02, 3.1370247E-02, 3.1487738E-02, 3.1605230E-02, 3.1722722E-02, 3.1847092E-02, 3.1994752E-02, 3.2186566E-02, 3.2448370E-02, 3.2811243E-02, 3.3311304E-02, 3.3988821E-02, 3.4886453E-02, 3.6046569E-02, 3.7507891E-02, 3.9301961E-02, 4.1450184E-02, 4.3962103E-02, 4.6835294E-02, 5.0056789E-02, 5.3605543E-02, 5.7455304E-02, 6.1577330E-02, 6.5942593E-02, 7.0523354E-02, 7.5294118E-02, 8.0235294E-02, 8.5333334E-02, 9.0588237E-02, 9.6000007E-02, 1.0156865E-01, 1.0729420E-01, 1.1317667E-01, 1.1921615E-01, 1.2541274E-01, 1.3176663E-01, 1.3827811E-01, 1.4494759E-01, 1.5177570E-01, 1.5876329E-01, 1.6591154E-01, 1.7322205E-01, 1.8069694E-01, 1.8833901E-01, 1.9615184E-01, 2.0414003E-01, 2.1230936E-01, 2.2066708E-01, 2.2922216E-01, 2.3798562E-01, 2.4697090E-01, 2.5619425E-01, 2.6567524E-01, 2.7543722E-01, 2.8550798E-01, 2.9592033E-01, 3.0671286E-01, 3.1793075E-01, 3.2962662E-01, 3.4186156E-01, 3.5470615E-01, 3.6824166E-01, 3.8256132E-01, 3.9777177E-01, 4.1399450E-01, 4.3136760E-01, 4.5004751E-01, 4.7021097E-01, 4.9205715E-01, 5.1580988E-01, 5.4172016E-01, 5.7006873E-01, 6.0116894E-01, 6.3536978E-01, 6.7305910E-01, 7.1466712E-01, 7.6067015E-01, 8.1159449E-01, 8.6802076E-01, 9.3058829E-01, 1.0000000E+00))
  elif levelsset=='L470':
     z_top_of_model = 85000.00
     first_constant_r_rho_level = 275
     eta_theta = np.array((0.0, 1.1764706E-04, 2.4019608E-04, 3.6764706E-04, 5.0000000E-04, 6.3725490E-04, 7.7941176E-04, 9.2647059E-04, 1.0784314E-03, 1.2352941E-03, 1.3970588E-03, 1.5637255E-03, 1.7352941E-03, 1.9117647E-03, 2.0931373E-03, 2.2794118E-03, 2.4705882E-03, 2.6666667E-03, 2.8676471E-03, 3.0735294E-03, 3.2843137E-03, 3.5000000E-03, 3.7205882E-03, 3.9460784E-03, 4.1764706E-03, 4.4117647E-03, 4.6519608E-03, 4.8970588E-03, 5.1470588E-03, 5.4019608E-03, 5.6617647E-03, 5.9264706E-03, 6.1960784E-03, 6.4705882E-03, 6.7500000E-03, 7.0343137E-03, 7.3235294E-03, 7.6176471E-03, 7.9166667E-03, 8.2205882E-03, 8.5294118E-03, 8.8431373E-03, 9.1617647E-03, 9.4852941E-03, 9.8137255E-03, 1.0147059E-02, 1.0485294E-02, 1.0828431E-02, 1.1176471E-02, 1.1529412E-02, 1.1887255E-02, 1.2250000E-02, 1.2617647E-02, 1.2990196E-02, 1.3367647E-02, 1.3750000E-02, 1.4137255E-02, 1.4529412E-02, 1.4926471E-02, 1.5328431E-02, 1.5735294E-02, 1.6147059E-02, 1.6563725E-02, 1.6985294E-02, 1.7411765E-02, 1.7843137E-02, 1.8279412E-02, 1.8720588E-02, 1.9166667E-02, 1.9617647E-02, 2.0073529E-02, 2.0534314E-02, 2.1000000E-02, 2.1470588E-02, 2.1946078E-02, 2.2426471E-02, 2.2911765E-02, 2.3401961E-02, 2.3897059E-02, 2.4397059E-02, 2.4901961E-02, 2.5411765E-02, 2.5926471E-02, 2.6446078E-02, 2.6970588E-02, 2.7500000E-02, 2.8034314E-02, 2.8573529E-02, 2.9117647E-02, 2.9666667E-02, 3.0220588E-02, 3.0779412E-02, 3.1343137E-02, 3.1911765E-02, 3.2485294E-02, 3.3063725E-02, 3.3647059E-02, 3.4235294E-02, 3.4828431E-02, 3.5426471E-02, 3.6029412E-02, 3.6637255E-02, 3.7250000E-02, 3.7867647E-02, 3.8490196E-02, 3.9117647E-02, 3.9750000E-02, 4.0387255E-02, 4.1029412E-02, 4.1676471E-02, 4.2328431E-02, 4.2985294E-02, 4.3647059E-02, 4.4313725E-02, 4.4985294E-02, 4.5661765E-02, 4.6343137E-02, 4.7029412E-02, 4.7720588E-02, 4.8416667E-02, 4.9117647E-02, 4.9823529E-02, 5.0534314E-02, 5.1250000E-02, 5.1970588E-02, 5.2696078E-02, 5.3426471E-02, 5.4161765E-02, 5.4901961E-02, 5.5647059E-02, 5.6397059E-02, 5.7151961E-02, 5.7911765E-02, 5.8676471E-02, 5.9446078E-02, 6.0220588E-02, 6.1000000E-02, 6.1784314E-02, 6.2573529E-02, 6.3367647E-02, 6.4166667E-02, 6.4970588E-02, 6.5779412E-02, 6.6593137E-02, 6.7411765E-02, 6.8235294E-02, 6.9063725E-02, 6.9897059E-02, 7.0735294E-02, 7.1578430E-02, 7.2426468E-02, 7.3279407E-02, 7.4137245E-02, 7.4999983E-02, 7.5867618E-02, 7.6740150E-02, 7.7617576E-02, 7.8499894E-02, 7.9387103E-02, 8.0279198E-02, 8.1176176E-02, 8.2078035E-02, 8.2984769E-02, 8.3896373E-02, 8.4812844E-02, 8.5734174E-02, 8.6660358E-02, 8.7591388E-02, 8.8527258E-02, 8.9467959E-02, 9.0413483E-02, 9.1363821E-02, 9.2318962E-02, 9.3278897E-02, 9.4243614E-02, 9.5213101E-02, 9.6187346E-02, 9.7166336E-02, 9.8150057E-02, 9.9138494E-02, 1.0013163E-01, 1.0112946E-01, 1.0213195E-01, 1.0313909E-01, 1.0415087E-01, 1.0516726E-01, 1.0618825E-01, 1.0721381E-01, 1.0824393E-01, 1.0927858E-01, 1.1031774E-01, 1.1136139E-01, 1.1240950E-01, 1.1346205E-01, 1.1451901E-01, 1.1558037E-01, 1.1664609E-01, 1.1771614E-01, 1.1879050E-01, 1.1986914E-01, 1.2095203E-01, 1.2203915E-01, 1.2313045E-01, 1.2422592E-01, 1.2532552E-01, 1.2642921E-01, 1.2753697E-01, 1.2864877E-01, 1.2976456E-01, 1.3088433E-01, 1.3200802E-01, 1.3313562E-01, 1.3426708E-01, 1.3540237E-01, 1.3654145E-01, 1.3768429E-01, 1.3883085E-01, 1.3998110E-01, 1.4113500E-01, 1.4229251E-01, 1.4345359E-01, 1.4461821E-01, 1.4578634E-01, 1.4695793E-01, 1.4813295E-01, 1.4931136E-01, 1.5049313E-01, 1.5167821E-01, 1.5286657E-01, 1.5405817E-01, 1.5525299E-01, 1.5645097E-01, 1.5765209E-01, 1.5885631E-01, 1.6006359E-01, 1.6127391E-01, 1.6248722E-01, 1.6370350E-01, 1.6492270E-01, 1.6614480E-01, 1.6736977E-01, 1.6859757E-01, 1.6982818E-01, 1.7106156E-01, 1.7229769E-01, 1.7353654E-01, 1.7477807E-01, 1.7602228E-01, 1.7726913E-01, 1.7851860E-01, 1.7977066E-01, 1.8102531E-01, 1.8228251E-01, 1.8354224E-01, 1.8480450E-01, 1.8606927E-01, 1.8733654E-01, 1.8860628E-01, 1.8987850E-01, 1.9115318E-01, 1.9243032E-01, 1.9370992E-01, 1.9499197E-01, 1.9627646E-01, 1.9756341E-01, 1.9885282E-01, 2.0014469E-01, 2.0143904E-01, 2.0273587E-01, 2.0403519E-01, 2.0533703E-01, 2.0664141E-01, 2.0794834E-01, 2.0925784E-01, 2.1056996E-01, 2.1188471E-01, 2.1320213E-01, 2.1452227E-01, 2.1584515E-01, 2.1717082E-01, 2.1849933E-01, 2.1983073E-01, 2.2116507E-01, 2.2250242E-01, 2.2384283E-01, 2.2518636E-01, 2.2653310E-01, 2.2788310E-01, 2.2923645E-01, 2.3059324E-01, 2.3195354E-01, 2.3331744E-01, 2.3468505E-01, 2.3605646E-01, 2.3743178E-01, 2.3881112E-01, 2.4019458E-01, 2.4158230E-01, 2.4297439E-01, 2.4437099E-01, 2.4577223E-01, 2.4717824E-01, 2.4858919E-01, 2.5000521E-01, 2.5142647E-01, 2.5285314E-01, 2.5428537E-01, 2.5572335E-01, 2.5716725E-01, 2.5861728E-01, 2.6007361E-01, 2.6153646E-01, 2.6300603E-01, 2.6448254E-01, 2.6596620E-01, 2.6745725E-01, 2.6895593E-01, 2.7046247E-01, 2.7197713E-01, 2.7350016E-01, 2.7503184E-01, 2.7657244E-01, 2.7812223E-01, 2.7968151E-01, 2.8125058E-01, 2.8282974E-01, 2.8441931E-01, 2.8601960E-01, 2.8763096E-01, 2.8925373E-01, 2.9088824E-01, 2.9253487E-01, 2.9419398E-01, 2.9586595E-01, 2.9755116E-01, 2.9925001E-01, 3.0096291E-01, 3.0269027E-01, 3.0443252E-01, 3.0619010E-01, 3.0796345E-01, 3.0975303E-01, 3.1155932E-01, 3.1338277E-01, 3.1522390E-01, 3.1708319E-01, 3.1896117E-01, 3.2085834E-01, 3.2277526E-01, 3.2471245E-01, 3.2667049E-01, 3.2864995E-01, 3.3065139E-01, 3.3267543E-01, 3.3472266E-01, 3.3679371E-01, 3.3888921E-01, 3.4100980E-01, 3.4315614E-01, 3.4532891E-01, 3.4752879E-01, 3.4975647E-01, 3.5201267E-01, 3.5429811E-01, 3.5661354E-01, 3.5895971E-01, 3.6133738E-01, 3.6374735E-01, 3.6619040E-01, 3.6866735E-01, 3.7117904E-01, 3.7372629E-01, 3.7630997E-01, 3.7893096E-01, 3.8159014E-01, 3.8428841E-01, 3.8702671E-01, 3.8980596E-01, 3.9262713E-01, 3.9549117E-01, 3.9839909E-01, 4.0135188E-01, 4.0435057E-01, 4.0739619E-01, 4.1048980E-01, 4.1363247E-01, 4.1682531E-01, 4.2006941E-01, 4.2336591E-01, 4.2671594E-01, 4.3012069E-01, 4.3358133E-01, 4.3709906E-01, 4.4067511E-01, 4.4431072E-01, 4.4800715E-01, 4.5176569E-01, 4.5558762E-01, 4.5947428E-01, 4.6342700E-01, 4.6744715E-01, 4.7153612E-01, 4.7569529E-01, 4.7992611E-01, 4.8423001E-01, 4.8860847E-01, 4.9306297E-01, 4.9759503E-01, 5.0220617E-01, 5.0689796E-01, 5.1167198E-01, 5.1652982E-01, 5.2147311E-01, 5.2650349E-01, 5.3162265E-01, 5.3683227E-01, 5.4213408E-01, 5.4752981E-01, 5.5302123E-01, 5.5861014E-01, 5.6429835E-01, 5.7008770E-01, 5.7598006E-01, 5.8197732E-01, 5.8808139E-01, 5.9429422E-01, 6.0061779E-01, 6.0705407E-01, 6.1360510E-01, 6.2027293E-01, 6.2705963E-01, 6.3396729E-01, 6.4099806E-01, 6.4815409E-01, 6.5543756E-01, 6.6285069E-01, 6.7039572E-01, 6.7807492E-01, 6.8589059E-01, 6.9384505E-01, 7.0194067E-01, 7.1017982E-01, 7.1856493E-01, 7.2709845E-01, 7.3578284E-01, 7.4462061E-01, 7.5361431E-01, 7.6276650E-01, 7.7207977E-01, 7.8155677E-01, 7.9120015E-01, 8.0101260E-01, 8.1099686E-01, 8.2113460E-01, 8.3136688E-01, 8.4168259E-01, 8.5207060E-01, 8.6251979E-01, 8.7301904E-01, 8.8355722E-01, 8.9412321E-01, 9.0470588E-01, 9.1529412E-01, 9.2588235E-01, 9.3647059E-01, 9.4705882E-01, 9.5764706E-01, 9.6823529E-01, 9.7882353E-01, 9.8941176E-01, 1.0000000E+00))
  
  return eta_theta*z_top_of_model*.001   #  In km in the absence of orography

def plotlevelssets():
  import matplotlib.pyplot as plt, numpy as np
  
  xl=('L38','L85','L242','L346','L470')
  lls=[]
  nls=len(xl)
  for j in range(nls): lls.append(returnlevels(xl[j]))
  
  dummy=plt.figure()
  for j in range(nls):
    ls=lls[j] ;  
    for jl in range(len(ls)):
      if jl%10==9: xs=(j+.1,j+.9)
      else:        xs=(j+.35,j+.65)
      dummy=plt.plot(xs,(ls[jl],ls[jl]),color='k')
  
  dummy=plt.xticks(np.arange(nls)+.5, xl)
  dummy=plt.xlim([0.,nls]) ;  dummy=plt.ylim((0.,25.))
  dummy=plt.ylabel('km')
  dummy=plt.show()

#  Code to produce the levels set figure for Ingram & Bushell (2021).

def plot2levelssetsandthicknesses():
  import matplotlib.pyplot as plt, numpy as np
  import plotlevelssets

  xl=('L85','L242')
  lss=('--','-')
  lls=[]
  nls=len(xl)
  for j in range(nls): lls.append(plotlevelssets.returnlevels(xl[j]))
  
  dummy=plt.figure()
  dummy=plt.subplot(121)
  for j in range(nls):
    ls=lls[j]
    for jl in range(len(ls)):
#  Plot a horizontal line for each level centred on the ordinal of the set+-.5
      if jl%10==9: xs=(j+.1,j+.9)
      else:        xs=(j+.35,j+.65)
      dummy=plt.plot(xs,(ls[jl],ls[jl]),color='k')

  dummy=plt.xticks(np.arange(nls)+.5, xl)
  dummy=plt.xlim([0.,nls]) ;  dummy=plt.ylim((0.,25.)) ;  dummy=plt.ylabel('km')
  
  dummy=plt.subplot(122)
  lss=('--','-')
#  Plot a graph of the differences centred to the R:
  for j in range(nls):
    ls=lls[j]
    dummy=plt.plot(1000.*(ls[1:]-ls[:-1]), .5*(ls[1:]+ls[:-1]), color='k',linestyle=lss[j])

  dummy=plt.xlim([0.,1000.]) ;  dummy=plt.ylim((0.,25.)) ;  dummy=plt.xlabel('m') ;  dummy=plt.ylabel('km')
  dummy=plt.show()
